# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/ci-build-git?view=azure-devops&tabs=yaml#exclude-or-include-tasks-for-builds-based-on-the-branch-being-built
# https://docs.microsoft.com/en-us/azure/devops/pipelines/integrations/slack?view=azure-devops

trigger:
- master
pr:
  autoCancel: true
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.101'

- script: dotnet restore
  displayName: 'Restore'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build'

- script: dotnet test --configuration $(buildConfiguration)
  displayName: 'Test'

- task: DotNetCoreCLI@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: AzureWebApp@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Deploy'
  inputs:
    azureSubscription: 'DevOpsServiceConnection'
    appType: 'webAppLinux'
    appName: 'customer-consumption-api'
    package: '$(System.ArtifactsDirectory)/**/*.zip'
